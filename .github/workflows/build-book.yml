on:
  workflow_dispatch:
    inputs:
      body:
        description: 'Changes description'
        required: true

      sign:
        type: choice
        description: Significance of changes
        options:
        - major
        - minor
        - patch

      draft:
        description: 'Make unpublished'
        required: true
        type: boolean
        default: false

      experimental:
        description: 'Make make experimental'
        required: true
        type: boolean
        default: false

jobs:
  build-book:
    runs-on: ubuntu-latest
    env:
      VERSION: ""

    steps:
    - uses: actions/checkout@v3
##get latex tools
#    - run: sudo apt -y update
#    - run: sudo apt -y install texlive-latex-base texlive-fonts-recommended texlive-latex-extra
##    - run: sudo apt -y install texlive-fonts-extra
#    - run: sudo apt -y install texlive-lang-cyrillic
##get python and needed libs
#    - uses: actions/setup-python@v4
#      with:
#        python-version: "3.10"
#        cache: 'pip'
#    - run: python -m pip install --upgrade pip
#    - run: pip install -r scripts/requirements.txt
##double run to get proper table of contents
#    - run: mkdir output
#    - run: pdflatex --enable-pipes --shell-escape -output-directory=output ./Threads-of-Fate.tex
#    - run: pdflatex --enable-pipes --shell-escape -output-directory=output ./Threads-of-Fate.tex

# generate release tag
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0
    - name: 'Get next version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
    - name: 'read sign'
      run: echo ${{ inputs.sign }}
    - name: 'increment major'
      if: ${{ inputs.sign == 'major' }}
      run: env.VERSION=steps.semvers.outputs.major
    - name: 'increment minor'
      if: ${{ inputs.sign == 'minor' }}
      run: env.VERSION=steps.semvers.outputs.minor
    - name: 'increment patch'
      if: ${{ inputs.sign == 'patch' }}
      run: $env.VERSION=$steps.semvers.outputs.patch

    - name: 'read env'
      run: echo ${{ env.VERSION }}

#    - name: Release book
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: (?)(?)(?) ${{ github.run_number }}
#          release_name: Release (?)(?)(?) ${{ github.run_number }}
#          body: ${{inputs.body}}
#          draft: ${{inputs.draft}}
#          prerelease: false

#      - name: Upload Release Asset
#        id: upload-release-asset 
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#          asset_path: ./output/Threads-of-Fate.pdf
#          asset_name: Threads-of-Fate-v${{ github.run_number }}.pdf
#          asset_content_type: application/pdf
